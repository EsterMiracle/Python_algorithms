"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать где какая сложность.
Примечание:
Построить список можно через списковое включение.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

my_list = [22, 14, 56, 13, 78, 12]


# Сложность алгоритма квадратичная: O(n**2)
# Составим формулу: O(1) + O(n) * O(n) + O(1) + O(1) = O(n**2)
def heavy_alg(*args):
    lowest = my_list[0]     # O(1) - присвоение
    for i in my_list[1::]:  # O(len(n)) = O(n) - зависит от длины аргумента
        if i < lowest:      # O(n)
            lowest = i      # O(1)
    return print(lowest)    # O(1)


# Сложность алгоритма линейная: O(n)
# Составим формулу: O(1) + O(n) = O(n)
def light_alg(*args):
    return print(min(my_list))  # return - O(1); min - O(n)


heavy_alg(my_list)
light_alg(my_list)
